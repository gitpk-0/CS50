Week 4 -- Memory

Computer memory uses hexadecimal to describe each address or location

By writing 0x in front of a hexadecimal value, we can distinguish them from decimal values

---

A pointer is a variable that stores an address in memory, where some other variable might be stored

int n = 50;
int *p = &n;

The & operator can be used to get the address of some variable, as with &n

And the * operator declares a variable as a pointer, as with int *p, indicating that we have a variable called p that points to an int

The * operator is also the dereference operator, which goes to an address to get the value stored there

---

Strings

string s = "HI!";  

^ requires cs50 library because string isn't an actual type built into C

char *s = "HI!";

^ same as string s = "HI!"; but does not require the cs5o library

char *s = "HI!";
printf("%p\n", s):

This would print the address of s[0]

typedef char *string; 

^One line of code in C that brings the string type into existence